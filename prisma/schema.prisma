// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(cuid())
  firstName String   @map("first_name")
  lastName  String?  @map("last_name")
  email     String   @unique
  phone     String?   @unique
  avatar    String?
  country   String?
  city      String?
  password  String?
  role      String   @default("seller")
  status    String   @default("active")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  posts     Post[]
  // comments  Comment[]
  shops     Shop[]

  @@map(name: "users")
}

model Post {
  id         String       @id @default(cuid())
  title      String
  body       String
  // comments          Comment[]
  // categoryId String              @map("category_id")
  author     User         @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  categories Category[]
  PostImages PostImages[]
}

model Category {
  id    String  @id @default(cuid())
  name  String?
  posts Post[]
}

model PostImages {
  id     String @id @default(cuid())
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

// model Comment {
//   id                   Int      @id @default(autoincrement())
//   body                 String
//   user                 User     @relation(fields: [userId], references: [id])
//   userId               String
//   post                 Post     @relation(fields: [postId], references: [id])
//   postId               String
//   createdAt            DateTime @default(now())
//   updatedAt            DateTime @updatedAt
// }

model Shop {
  id      String @id @default(cuid())
  name    String
  address String
  phone   String

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  products Product[]
  user     User      @relation(fields: [userId], references: [id])
  userId   String
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  category    String
  quantity    Int
  image       String
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")

  shop   Shop    @relation(fields: [shopId], references: [id])
  shopId String
  orders Order[]
}

model Order {
  id        String   @id @default(cuid())
  quantity  Int
  price     Float
  status    String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  product   Product @relation(fields: [productId], references: [id])
  productId String
}
